package com.example.dllo.vmovie.dbtool;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig subScribeBeanDaoConfig;
    private final DaoConfig likeFilmBeanDaoConfig;
    private final DaoConfig likeBackStageBeanDaoConfig;

    private final SubScribeBeanDao subScribeBeanDao;
    private final LikeFilmBeanDao likeFilmBeanDao;
    private final LikeBackStageBeanDao likeBackStageBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        subScribeBeanDaoConfig = daoConfigMap.get(SubScribeBeanDao.class).clone();
        subScribeBeanDaoConfig.initIdentityScope(type);

        likeFilmBeanDaoConfig = daoConfigMap.get(LikeFilmBeanDao.class).clone();
        likeFilmBeanDaoConfig.initIdentityScope(type);

        likeBackStageBeanDaoConfig = daoConfigMap.get(LikeBackStageBeanDao.class).clone();
        likeBackStageBeanDaoConfig.initIdentityScope(type);

        subScribeBeanDao = new SubScribeBeanDao(subScribeBeanDaoConfig, this);
        likeFilmBeanDao = new LikeFilmBeanDao(likeFilmBeanDaoConfig, this);
        likeBackStageBeanDao = new LikeBackStageBeanDao(likeBackStageBeanDaoConfig, this);

        registerDao(SubScribeBean.class, subScribeBeanDao);
        registerDao(LikeFilmBean.class, likeFilmBeanDao);
        registerDao(LikeBackStageBean.class, likeBackStageBeanDao);
    }
    
    public void clear() {
        subScribeBeanDaoConfig.clearIdentityScope();
        likeFilmBeanDaoConfig.clearIdentityScope();
        likeBackStageBeanDaoConfig.clearIdentityScope();
    }

    public SubScribeBeanDao getSubScribeBeanDao() {
        return subScribeBeanDao;
    }

    public LikeFilmBeanDao getLikeFilmBeanDao() {
        return likeFilmBeanDao;
    }

    public LikeBackStageBeanDao getLikeBackStageBeanDao() {
        return likeBackStageBeanDao;
    }

}
